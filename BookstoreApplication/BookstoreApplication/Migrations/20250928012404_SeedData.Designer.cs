// <auto-generated />
using System;
using BookstoreApplication.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BookstoreApplication.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250928012404_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookstoreApplication.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("BirthDay");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Biography = "Bio 1",
                            DateOfBirth = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Author One"
                        },
                        new
                        {
                            Id = 2,
                            Biography = "Bio 2",
                            DateOfBirth = new DateTime(1982, 2, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Author Two"
                        },
                        new
                        {
                            Id = 3,
                            Biography = "Bio 3",
                            DateOfBirth = new DateTime(1984, 3, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Author Three"
                        },
                        new
                        {
                            Id = 4,
                            Biography = "Bio 4",
                            DateOfBirth = new DateTime(1986, 4, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Author Four"
                        },
                        new
                        {
                            Id = 5,
                            Biography = "Bio 5",
                            DateOfBirth = new DateTime(1988, 5, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Author Five"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.AuthorAward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("AwardId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AwardedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("AwardId");

                    b.ToTable("AuthorAwardBridge", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            AwardId = 1,
                            AwardedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            AwardId = 2,
                            AwardedDate = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            AwardId = 1,
                            AwardedDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            AwardId = 3,
                            AwardedDate = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 3,
                            AwardId = 2,
                            AwardedDate = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            AwardId = 3,
                            AwardedDate = new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 4,
                            AwardId = 1,
                            AwardedDate = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 4,
                            AwardId = 4,
                            AwardedDate = new DateTime(2020, 8, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 5,
                            AwardId = 2,
                            AwardedDate = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 5,
                            AwardId = 3,
                            AwardedDate = new DateTime(2020, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 1,
                            AwardId = 4,
                            AwardedDate = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 2,
                            AwardId = 4,
                            AwardedDate = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 3,
                            AwardId = 4,
                            AwardedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 4,
                            AwardId = 2,
                            AwardedDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 5,
                            AwardId = 1,
                            AwardedDate = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Award", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Awards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Desc 1",
                            Name = "Award 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Desc 2",
                            Name = "Award 2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Desc 3",
                            Name = "Award 3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Desc 4",
                            Name = "Award 4"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PageCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            ISBN = "ISBN001",
                            PageCount = 100,
                            PublishedDate = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Book 1"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            ISBN = "ISBN002",
                            PageCount = 150,
                            PublishedDate = new DateTime(2001, 2, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Book 2"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            ISBN = "ISBN003",
                            PageCount = 200,
                            PublishedDate = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Book 3"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            ISBN = "ISBN004",
                            PageCount = 250,
                            PublishedDate = new DateTime(2003, 4, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Book 4"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 3,
                            ISBN = "ISBN005",
                            PageCount = 300,
                            PublishedDate = new DateTime(2004, 5, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Book 5"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            ISBN = "ISBN006",
                            PageCount = 120,
                            PublishedDate = new DateTime(2005, 6, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Book 6"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 4,
                            ISBN = "ISBN007",
                            PageCount = 180,
                            PublishedDate = new DateTime(2006, 7, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Book 7"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 4,
                            ISBN = "ISBN008",
                            PageCount = 220,
                            PublishedDate = new DateTime(2007, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Book 8"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 5,
                            ISBN = "ISBN009",
                            PageCount = 140,
                            PublishedDate = new DateTime(2008, 9, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Book 9"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 5,
                            ISBN = "ISBN010",
                            PageCount = 160,
                            PublishedDate = new DateTime(2009, 10, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Book 10"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 1,
                            ISBN = "ISBN011",
                            PageCount = 190,
                            PublishedDate = new DateTime(2010, 11, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Book 11"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 2,
                            ISBN = "ISBN012",
                            PageCount = 210,
                            PublishedDate = new DateTime(2011, 12, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Book 12"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Address A",
                            Name = "Publisher A",
                            Website = "https://publisherA.com"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Address B",
                            Name = "Publisher B",
                            Website = "https://publisherB.com"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Address C",
                            Name = "Publisher C",
                            Website = "https://publisherC.com"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.AuthorAward", b =>
                {
                    b.HasOne("BookstoreApplication.Models.Author", "Author")
                        .WithMany("AuthorAwards")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreApplication.Models.Award", "Award")
                        .WithMany("AuthorAwards")
                        .HasForeignKey("AwardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Award");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Book", b =>
                {
                    b.HasOne("BookstoreApplication.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreApplication.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Author", b =>
                {
                    b.Navigation("AuthorAwards");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Award", b =>
                {
                    b.Navigation("AuthorAwards");
                });
#pragma warning restore 612, 618
        }
    }
}
